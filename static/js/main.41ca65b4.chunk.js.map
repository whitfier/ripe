{"version":3,"sources":["components/AppBar.js","components/VideoPost.js","components/SelfPost.js","components/LinkPost.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","width","grow","flexGrow","search","Object","defineProperty","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","breakpoints","up","spacing","unit","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","react_default","a","createElement","className","AppBar_default","Toolbar_default","Search_default","Input_default","placeholder","disableUnderline","input","onKeyPress","e","key","onSubmit","target","value","MediaPost","Card_default","style","maxWidth","maxHeight","overflow","ReactPlayer_default","url","controls","playing","muted","marginRight","CardContent_default","Typography_default","gutterBottom","variant","component","data","title","CardActions_default","Button_default","size","href","concat","permalink","SelfPost","react_markdown_default","source","selftext","LinkPost","index_es","image","preview","images","PAGE_SIZE","createMuiTheme","primary","main","App","state","subreddit","posts","before","after","index","loading","removeStickied","filter","post","stickied","fetchPage","_this","setState","fetch","then","response","json","children","onKeyDown","event","_this$state","relativeIndex","length","onSearch","renderPost","post_hint","components_LinkPost","VideoPost","media","reddit_video","scrubber_media_url","domain","reddit_video_preview","components_SelfPost","document","addEventListener","this","removeEventListener","_this$state2","currentPost","core_styles","components_AppBar","Grid_default","container","justify","CircularProgress_default","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.41ca65b4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Input from \"@material-ui/core/Input\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 240,\n      \"&:focus\": {\n        width: 400\n      }\n    }\n  }\n});\n\nconst SearchAppBar = props => {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"absolute\" color=\"primary\">\n        <Toolbar>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <Input\n              placeholder=\"Enter a subreddit...\"\n              disableUnderline\n              classes={{ root: classes.inputRoot, input: classes.inputInput }}\n              onKeyPress={e => {\n                if (e.key === \"Enter\") props.onSubmit(e.target.value);\n              }}\n            />\n          </div>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nSearchAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SearchAppBar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReactPlayer from \"react-player\";\n\nconst MediaPost = props => {\n  return (\n    <Card style={{ maxWidth: 800, maxHeight: 600, overflow: \"auto\" }}>\n      <ReactPlayer\n        url={props.url}\n        controls\n        playing\n        muted\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        }}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"headline\" component=\"h2\">\n          {props.data.title}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" href={props.data.url}>\n          Source\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          href={`https://www.reddit.com${props.data.permalink}`}\n        >\n          Comments\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nMediaPost.propTypes = {\n  data: PropTypes.object.isRequired,\n  url: PropTypes.string.isRequired\n};\n\nexport default MediaPost;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Markdown from \"react-markdown\";\n\nconst SelfPost = props => {\n  return (\n    <Card style={{ maxWidth: 800, maxHeight: 600, overflow: \"auto\" }}>\n      <CardContent>\n        <Typography gutterBottom variant=\"headline\" component=\"h2\">\n          {props.data.title}\n        </Typography>\n        <Typography component=\"div\">\n          <Markdown source={props.data.selftext} />\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" href={props.data.url}>\n          Source\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          href={`https://www.reddit.com${props.data.permalink}`}\n        >\n          Comments\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nSelfPost.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default SelfPost;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardMedia } from \"@material-ui/core\";\n\nconst LinkPost = props => {\n  return (\n    <Card style={{ maxWidth: 800, maxHeight: 600, overflow: \"auto\" }}>\n      <CardMedia\n        image={props.url}\n        style={{\n          width:\n            (props.data.preview.images[0].source.width * 400) /\n            props.data.preview.images[0].source.height,\n          height: 400,\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        }}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"headline\" component=\"h2\">\n          {props.data.title}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" href={props.data.url}>\n          Source\n        </Button>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          href={`https://www.reddit.com${props.data.permalink}`}\n        >\n          Comments\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLinkPost.propTypes = {\n  data: PropTypes.object.isRequired,\n  url: PropTypes.string.isRequired\n};\n\nexport default LinkPost;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"./components/AppBar\";\nimport VideoPost from \"./components/VideoPost\";\nimport SelfPost from \"./components/SelfPost\";\nimport LinkPost from \"./components/LinkPost\";\n\nconst PAGE_SIZE = 50;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ff4500\"\n    }\n  }\n});\n\nclass App extends React.Component {\n  state = {\n    subreddit: \"all\",\n    posts: [],\n    before: null,\n    after: null,\n    index: 0,\n    loading: true\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyDown, false);\n    this.fetchPage(null, null);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown, false);\n  }\n\n  removeStickied = posts => posts.filter(post => !post.data.stickied);\n\n  fetchPage = (before, after) => {\n    const { subreddit } = this.state;\n    this.setState({ loading: true });\n    fetch(\n      `https://www.reddit.com/r/${subreddit}.json?limit=${PAGE_SIZE}&count=${PAGE_SIZE}&before=${before}&after=${after}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          posts: this.removeStickied(data.data.children),\n          before: data.data.before,\n          after: data.data.after,\n          loading: false\n        })\n      );\n  };\n\n  onKeyDown = event => {\n    const { posts, index, loading, before, after } = this.state;\n\n    if (loading || (event.key === \"ArrowLeft\" && index === 0)) return;\n\n    const relativeIndex = index % PAGE_SIZE;\n    if (event.key === \"ArrowRight\") {\n      this.setState({ index: index + 1 });\n      if (relativeIndex === posts.length - 1) this.fetchPage(null, after);\n    } else if (event.key === \"ArrowLeft\") {\n      this.setState({ index: index - 1 });\n      if (relativeIndex === 0) this.fetchPage(before, null);\n    }\n  };\n\n  onSearch = subreddit =>\n    this.setState({ subreddit, index: 0 }, () => this.fetchPage(null, null));\n\n  renderPost = data => {\n    switch (data.post_hint) {\n      case \"image\":\n        return <LinkPost data={data} url={data.url} index={this.state.index} />;\n      case \"hosted:video\":\n        return (\n          <VideoPost\n            data={data}\n            url={data.media.reddit_video.scrubber_media_url}\n            index={this.state.index}\n          />\n        );\n      case \"rich:video\":\n        const url =\n          data.domain === \"gfycat.com\"\n            ? data.preview.reddit_video_preview.scrubber_media_url\n            : data.url;\n        return <VideoPost data={data} url={url} index={this.state.index} />;\n      case \"link\":\n        return data.preview.reddit_video_preview ? (\n          <VideoPost\n            data={data}\n            url={data.preview.reddit_video_preview.scrubber_media_url}\n            index={this.state.index}\n          />\n        ) : (\n          <LinkPost\n            data={data}\n            url={data.preview.images[0].source.url}\n            index={this.state.index}\n          />\n        );\n      default:\n        return <SelfPost data={data} index={this.state.index} />;\n    }\n  };\n\n  render() {\n    const { posts, index, loading } = this.state;\n    const currentPost = posts[index % PAGE_SIZE];\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <AppBar onSubmit={this.onSearch} />\n        <Grid\n          style={{ height: \"100vh\" }}\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          {loading ? <CircularProgress /> : this.renderPost(currentPost.data)}\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}